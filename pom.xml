<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.3.4.RELEASE</version>
		<relativePath />
	</parent>
	<groupId>ch.rasc</groupId>
	<artifactId>springsecuritytotp</artifactId>
	<version>0.0.1</version>
	<name>springsecuritytotp</name>
	<description>Demo project for 2FA with Spring Security</description>

	<properties>
		<java.version>13</java.version>
		<jooq.version>3.13.1</jooq.version>
		<doma.version>1.2.1</doma.version>
		<quartz.version>2.3.0</quartz.version>
		<bouncycastle.version>1.66</bouncycastle.version>
		<junit-jupiter.version>5.2.0</junit-jupiter.version>
		<aws.java.sdk.version>2.13.7</aws.java.sdk.version>
		<bootstrap.version>4.3.1</bootstrap.version>
		<jquery.version>3.5.1</jquery.version>
	</properties>
<!--If you created your Maven project in a different way, configure the latest version of the SDK for your project
by ensuring that the pom.xml file contains the following.-->
	<!--for -->
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>com.amazonaws</groupId>
				<artifactId>aws-java-sdk-bom</artifactId>
				<version>1.11.893</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>software.amazon.awssdk</groupId>
				<artifactId>bom</artifactId>
				<version>2.15.20</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<!--添加热部署-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<optional>true</optional>
			<scope>true</scope>
		</dependency>
	<!-- bootstrap -->
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>bootstrap</artifactId>
			<version>${bootstrap.version}</version>
		</dependency>

		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>jquery</artifactId>
			<version>${jquery.version}</version>
		</dependency>

		<!--sns dependency from aws-->
		<!-- https://mvnrepository.com/artifact/software.amazon.awssdk/sns -->
		<dependency>
			<groupId>software.amazon.awssdk</groupId>
			<artifactId>sns</artifactId>
			<scope>test</scope>
		</dependency>
		<!--aws s3-->
		<dependency>
			<groupId>com.amazonaws</groupId>
			<artifactId>aws-java-sdk-s3</artifactId>
		</dependency>
		<!-- aws messaging-->
		<!--including 6 dependencies -->
		<!-- https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-aws-messaging/2.2.4.RELEASE -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-aws-messaging</artifactId>
			<version>2.2.4.RELEASE</version>
		</dependency>

		<!--integration test-->
		<dependency>
			<groupId>org.springframework.integration</groupId>
			<artifactId>spring-integration-test</artifactId>
			<version>2.2.1.RELEASE</version>
			<scope>test</scope>
		</dependency>

		<!--junit test - no need version-->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.13.1</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>
		<dependency>
			<groupId>nz.net.ultraq.thymeleaf</groupId>
			<artifactId>thymeleaf-layout-dialect</artifactId>
		</dependency>
		<!--connect to mysql database-->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jdbc</artifactId>
		</dependency>
		<!--manipulate the database-->
		<dependency>
			<groupId>org.seasar.doma.boot</groupId>
			<artifactId>doma-spring-boot-starter</artifactId>
			<version>${doma.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<!--batch job-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-batch</artifactId>
		</dependency>
		<!--email-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-mail</artifactId>
		</dependency>
		<!--quarts - for batch job-->
		<dependency>
			<groupId>org.quartz-scheduler</groupId>
			<artifactId>quartz</artifactId>
			<version>${quartz.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>
		<!-- jOOQ to access the user information from database-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jooq</artifactId>
		</dependency>

		<dependency>
			<groupId>com.github.ben-manes.caffeine</groupId>
			<artifactId>caffeine</artifactId>
		</dependency>

		<dependency>
			<groupId>org.bouncycastle</groupId>
			<artifactId>bcprov-jdk15on</artifactId>
			<version>${bouncycastle.version}</version>
		</dependency>
		<!--Flyway for database migrations-->
<!--		<dependency>-->
<!--			<groupId>org.flywaydb</groupId>-->
<!--			<artifactId>flyway-core</artifactId>-->
<!--		</dependency>-->
		<!--that is stored in a file-based H2 database-->
<!--		<dependency>-->
<!--			<groupId>com.h2database</groupId>-->
<!--			<artifactId>h2</artifactId>-->
<!--		</dependency>-->
		<!-- provides methods for verifying TOTP codes and for generating secrets.-->
		<dependency>
			<groupId>org.jboss.aerogear</groupId>
			<artifactId>aerogear-otp-java</artifactId>
			<version>1.0.0</version>
		</dependency>

		<dependency>
			<groupId>com.codahale</groupId>
			<artifactId>passpol</artifactId>
			<version>0.7.0</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>
        <dependency>
            <groupId>org.jetbrains</groupId>
            <artifactId>annotations</artifactId>
            <version>RELEASE</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.16.22</version>
        </dependency>

<!--		<dependency>-->
<!--			<groupId>org.junit.jupiter</groupId>-->
<!--			<artifactId>junit-jupiter</artifactId>-->
<!--			<scope>test</scope>-->
<!--		</dependency>-->
<!--	</dependencies>-->
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<version>5.7.0</version>
			<scope>test</scope>
		</dependency>
<!--		Twilio message-->
		<dependency>
			<groupId>com.twilio.sdk</groupId>
			<artifactId>twilio</artifactId>
			<version>7.20.0</version>
		</dependency>
		<dependency>
			<groupId>software.amazon.awssdk</groupId>
			<artifactId>sns</artifactId>
		</dependency>
	</dependencies>

	<build>
	  <finalName>totp-demo</finalName>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<executable>true</executable>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>jooq</id>
			<build>
				<plugins>
					<plugin>
						<!--热部署配置-->
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-maven-plugin</artifactId>
						<configuration>
							<!--fork:如果没有该项配置,整个devtools不会起作用-->
							<fork>true</fork>
						</configuration>
					</plugin>

					<plugin>
						<groupId>org.jooq</groupId>
						<artifactId>jooq-codegen-maven</artifactId>
						<version>${jooq.version}</version>
						<executions>
							<execution>
								<id>generate-jooq-sources</id>
								<phase>generate-sources</phase>
								<goals>
									<goal>generate</goal>
								</goals>
								<configuration>
									<generator>
										<generate>
											<globalCatalogReferences>false</globalCatalogReferences>
											<globalSchemaReferences>false</globalSchemaReferences>
											<globalTableReferences>false</globalTableReferences>
											<globalSequenceReferences>false</globalSequenceReferences>
											<globalUDTReferences>false</globalUDTReferences>
											<globalRoutineReferences>false</globalRoutineReferences>
											<globalQueueReferences>false</globalQueueReferences>
											<globalLinkReferences>false</globalLinkReferences>
											<pojos>false</pojos>
											<daos>false</daos>
											<javaTimeTypes>true</javaTimeTypes>
										</generate>
										<database>
											<name>org.jooq.meta.extensions.ddl.DDLDatabase</name>
											<inputCatalog></inputCatalog>
											<inputSchema>PUBLIC</inputSchema>
											<outputSchemaToDefault>true</outputSchemaToDefault>
											<outputCatalogToDefault>true</outputCatalogToDefault>
											<properties>
												<property>
													<key>sort</key>
													<value>semantic</value>
												</property>
												<property>
													<key>scripts</key>
													<value>src/main/resources/db/migration/*</value>
												</property>
											</properties>
										</database>
										<target>
											<clean>true</clean>
											<packageName>ch.rasc.twofa.db</packageName>
											<directory>src/main/java</directory>
										</target>
									</generator>
								</configuration>
							</execution>
						</executions>
						<dependencies>
							<dependency>
								<groupId>org.jooq</groupId>
								<artifactId>jooq-meta-extensions</artifactId>
								<version>${jooq.version}</version>
							</dependency>
						</dependencies>
					</plugin>
				</plugins>
			</build>
		</profile>
		
    <profile>
      <id>production</id>
      <build>
        <plugins>
					<plugin>
						<groupId>com.github.eirslett</groupId>
						<artifactId>frontend-maven-plugin</artifactId>
						<version>1.10.0</version>
						<executions>
							<execution>
								<id>install node and npm</id>
								<goals>
									<goal>install-node-and-npm</goal>
								</goals>
							</execution>
							<execution>
								<id>npm install</id>
								<goals>
									<goal>npm</goal>
								</goals>
								<configuration>
									<arguments>install</arguments>
								</configuration>
							</execution>
							<execution>
								<id>build</id>
								<goals>
									<goal>npm</goal>
								</goals>
								<phase>prepare-package</phase>
								<configuration>
									<arguments>run build-prod</arguments>
								</configuration>
							</execution>
						</executions>
						<configuration>
							<nodeVersion>v14.4.0</nodeVersion>
							<workingDirectory>${basedir}/../client</workingDirectory>
							<NODE_ENV>production</NODE_ENV>
						</configuration>
					</plugin>

					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<phase>prepare-package</phase>
								<configuration>
									<target>
										<copy todir="${basedir}/target/classes/static">
											<fileset dir="${basedir}/../client/dist/twofa">
												<include name="**" />
											</fileset>
										</copy>
									</target>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
        </plugins>
      </build>
    </profile>				
	</profiles>
</project>
